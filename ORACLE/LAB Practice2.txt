SQL> create table Sales(Sale_id number,product_id number,quantity_sold number,sale_date date,total_price float);

Table created.
QL> insert into Sales values(1,101,5,to_date('2024-01-01','YYYY-MM-DD'),2500.00);

1 row created.

SQL> insert into Sales values(2,102,3,to_date('2024-01-02','YYYY-MM-DD'),900.00);

1 row created.

SQL> insert into Sales values(3,103,2,to_date('2024-01-02','YYYY-MM-DD'),60.00);

1 row created.

SQL>  insert into Sales values(4,104,4,to_date('2024-01-03','YYYY-MM-DD'),80.00);

1 row created.

SQL> insert into Sales values(5,105,6,to_date('2024-01-03','YYYY-MM-DD'),90.00);

1 row created.

1. Retrieve all columns from the Sales table.
SQL> select * from Sales;

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         1        101             5 01-JAN-24        2500
         2        102             3 02-JAN-24         900
         3        103             2 02-JAN-24          60
         4        104             4 03-JAN-24          80
         5        105             6 03-JAN-24          90

2. Retrieve sale_id and quantity_sold from sales table.
SQL> select SALE_ID,QUANTITY_SOLD from Sales;

   SALE_ID QUANTITY_SOLD
---------- -------------
         1             5
         2             3
         3             2
         4             4
         5             6

3. Retrieve the sale_id and sale_date from the Sales table.

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         1        101             5 01-JAN-24        2500
         2        102             3 02-JAN-24         900

4. Filter the Sales table to show only sales with a total_price greater than $100.
SQL> select * from Sales where TOTAL_PRICE>100;

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         1        101             5 01-JAN-24        2500
         2        102             3 02-JAN-24         900
5. Retrieve the sale_id and total_price from the Sales table for sales made on January 3, 2024.
SQL> SELECT * FROM Sales WHERE SALE_DATE = TO_DATE('2024-01-03', 'YYYY-MM-DD');

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         4        104             4 03-JAN-24          80
         5        105             6 03-JAN-24          90

6. Retrieve the sale_id, product_id, and total_price from the Sales table for sales with a quantity_sold greater than 4.
SQL> select SALE_ID,PRODUCT_ID, TOTAL_PRICE from Sales where QUANTITY_SOLD>4;

   SALE_ID PRODUCT_ID TOTAL_PRICE
---------- ---------- -----------
         1        101        2500
         5        105          90
7. Retrieve all columns from the Sales table those sale_id are 1, 3 & 5.
SQL> select * from Sales where SALE_ID in(1,3,5);

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         1        101             5 01-JAN-24        2500
         3        103             2 02-JAN-24          60
         5        105             6 03-JAN-24          90

8. Retrieve all columns from the Sales table those total_price between 90 and 1000.

SQL>  select * from Sales where  TOTAL_PRICE between 90 and 1000;

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         2        102             3 02-JAN-24         900
         5        105             6 03-JAN-24          90
9. Retrieve all columns from the Sales table those total_price not between 90 and 1000.
SQL> select * from Sales where  TOTAL_PRICE not between 90 and 1000;

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         1        101             5 01-JAN-24        2500
         3        103             2 02-JAN-24          60
         4        104             4 03-JAN-24          80

10. Retrieve all columns from the Sales table those sale_id are not in 1, 3 & 5.
SQL> select * from Sales where SALE_ID not in(1,3,5);

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         2        102             3 02-JAN-24         900
         4        104             4 03-JAN-24          80

11.  Update total_price as 500 in  the Sales table those sale_id are 1, 3 & 5.
SQL> update Sales set  TOTAL_PRICE=500 where SALE_ID in (1,3,5);

3 rows updated.
SQL> select * from Sales;

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         1        101             5 01-JAN-24         500
         2        102             3 02-JAN-24         900
         3        103             2 02-JAN-24         500
         4        104             4 03-JAN-24          80
         5        105             6 03-JAN-24         500
12. delete from the Sales table those total_price not between 90 and 1000.
SQL> delete from Sales where  TOTAL_PRICE not between 90 and 1000;

1 row deleted.

SQL> select * from Sales;

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         1        101             5 01-JAN-24         500
         2        102             3 02-JAN-24         900
         3        103             2 02-JAN-24         500
         5        105             6 03-JAN-24         500
13. Sort all the records using sale_id column in ascending order. 
SQL> select * from Sales order by SALE_ID;

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         1        101             5 01-JAN-24         500
         2        102             3 02-JAN-24         900
         3        103             2 02-JAN-24         500
         5        105             6 03-JAN-24         500
14. Sort all the records using sale_id column in descending order.


SQL> select * from Sales order by SALE_ID desc;

   SALE_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         5        105             6 03-JAN-24         500
         3        103             2 02-JAN-24         500
         2        102             3 02-JAN-24         900
         1        101             5 01-JAN-24         500
15. Rename the sale_id column as sales_id;

SQL> alter table Sales rename column SALE_ID to SALES_ID;

Table altered.

SQL> select * from Sales;

  SALES_ID PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ---------- ------------- --------- -----------
         1        101             5 01-JAN-24         500
         2        102             3 02-JAN-24         900
         3        103             2 02-JAN-24         500
         5        105             6 03-JAN-24         500

16. Drop the column sales_id.

SQL> ALTER TABLE Sales DROP COLUMN SALES_ID;

Table altered.

SQL> select * from Sales;

PRODUCT_ID QUANTITY_SOLD SALE_DATE TOTAL_PRICE
---------- ------------- --------- -----------
       101             5 01-JAN-24         500
       102             3 02-JAN-24         900
       103             2 02-JAN-24         500
       105             6 03-JAN-24         500

17. Rename the table as tbl_sales.

SQL> rename Sales to tbl_sales;

Table renamed.

18. Drop the table.
SQL> drop table tbl_sales;

Table dropped.





